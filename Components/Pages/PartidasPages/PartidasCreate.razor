@page "/Partidas/Create"

@inject JugadoresService jugadoresService
@inject PartidasService partidasService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle> Crear Nueva Partida </PageTitle>

<div class="container mt-3"> 
	<div class="card shadow-lg"> 
		<div class="card-header text-center text-white bg-info"> 
			<h5> <strong> Crear Nueva Partida </strong></h5>
		</div>

		<div class="card-body">
			<EditForm Model = "Partida" OnvalidSubmit="GuardarPartida"> 
				<DataAnnotationsValidator/>

				<div class="row"> 
					<div class="col-3"> 
						<label for="PartidaId"> <strong> PartidaId: </strong></label>
						<InputNumber id = "PartidaId" class = "form-control" @bind-Value = "@Partida.PartidaId" disabled/>
					</div>
				</div>

				<div class="row"> 
					<div class="col-3"> 
						<label class="form-label mt-2" for="Jugador1Id"> <strong> Jugador 1ID:</strong> </label>
						<InputSelect class="form-control form-select" @bind-Value = "Partida.Jugador1Id">
							<option> Seleccione un Jugador </option>
							@foreach(var jugador in ListaJugadores)
							{
								@if(jugador.JugadorId != Partida.Jugador2Id)
								{
									<option value="@jugador.JugadorId"> @jugador.Nombres</option>
								}
							}
						</InputSelect>
					</div>
				</div>

				<div class="row">
					<div class="col-3">
						<label class="form-label mt-2" for="Jugador2Id"> <strong> Jugador 2ID:</strong> </label>
						<InputSelect class="form-control form-select" @bind-Value="Partida.Jugador2Id">
							<option> Seleccione un jugador </option>
							@foreach (var jugador in ListaJugadores)
							{
								@if (jugador.JugadorId != Partida.Jugador1Id)
								{
									<option value="@jugador.JugadorId"> @jugador.Nombres</option>
								}
							}
						</InputSelect>
					</div>
				</div>

				<div class="row"> 
					<div class="col-4"> 
						<label class="form-label mt-2" for="EstadoPartida" ><strong> Estado Partida: </strong></label>
						<InputSelect class="form-control" @bind-Value = "Partida.EstadoPartida">
							<option selected disabled> Seleccione un estado </option>
							<option value="Pendiente"> Pendiente </option>
							<option value="En progreso"> En progreso </option>
							<option value="Finalizada"> Finalizada </option>
						</InputSelect>
						<ValidationMessage For ="() => Partida.EstadoPartida"  > </ValidationMessage>
					</div>
				</div>

				<div class="row">
					<div class="col-3">
						<label class="form-label mt-2" for="GanadorId"> <strong> Ganador Id:</strong> </label>
						<InputSelect class="form-control form-select" @bind-Value="Partida.GanadorId">
							<option> Seleccione un jugador </option>
							@foreach (var jugador in ListaJugadores)
							{
								@if ((jugador.JugadorId == Partida.Jugador1Id || jugador.JugadorId == Partida.Jugador2Id) && Partida.EstadoPartida.Equals("Finalizada"))
								{
									<option value="@jugador.JugadorId"> @jugador.Nombres</option>
								}
							}
						</InputSelect>
					</div>
				</div>

				<div class="row">
					<div class="col-3">
						<label class="form-label mt-2" for="TurnoJugador"> <strong> Turno Jugador: </strong> </label>
						<InputSelect class="form-control form-select" @bind-Value="Partida.TurnoJugadorId">
							<option> Seleccione un jugador </option>
							@foreach (var jugador in ListaJugadores)
							{
								if (jugador.JugadorId == Partida.Jugador1Id || jugador.JugadorId == Partida.Jugador2Id)
								{
									<option value="@jugador.JugadorId"> @jugador.Nombres</option>
								}
							}
						</InputSelect>
					</div>
				</div>

				<div class="row">
					<div class="col-3">
						<label class="form-label mt-2" for="FechaInicio"><strong> Fecha Inicio: </strong></label>
						<InputDate id="FechaInicio" class="form-control" @bind-Value="Partida.FechaInicio"> </InputDate>
					</div>
				</div>

				<div class="row">
					<div class="col-3">
						<label class="form-label mt-2" for="FechaFin"><strong> Fecha Fin: </strong></label>
						<InputDate id="FechaFin" class="form-control" @bind-Value="Partida.FechaFin" onblur="@(async () => await ValidarFechaFin())"> </InputDate>
					</div>
				</div>

				@if (!fechaFinValida)
				{
					<div class="text-danger"> Fecha fin no valida  </div>
				}

				<div class="card-footer bg-white"> 
					<div class="d-flex justify-content-center gap-2 mt-2">
						<button type="submit" class="btn btn-primary bi bi-floppy"> Guardar </button>
						<a href="/Partidas/Index" class="btn btn-secondary bi bi-arrow-left"> Regresar </a>
					</div>
				</div>
			</EditForm>
		</div>
	</div>
</div>

@code {
	public Partidas Partida = new();

	public List<Jugadores> ListaJugadores = new List<Jugadores>();

	public bool fechaFinValida { get; set; } = true;

	protected override async Task OnInitializedAsync ()
	{
		ListaJugadores = await jugadoresService.Listar(j => true);
	}

	private async Task ValidarFechaFin ()
	{
		if ((Partida.FechaFin.HasValue && Partida.FechaFin < Partida.FechaInicio))
		{
			fechaFinValida = false;
			return;
		}

		fechaFinValida = true;
		StateHasChanged();
		await InvokeAsync(StateHasChanged);
	}

	private async Task GuardarPartida ()
	{
		await Task.Delay(1000);

		if (fechaFinValida)
		{
			if (await partidasService.Guardar(Partida))
			{
				navigationManager.NavigateTo("/Partidas/Index");
			}
		}
	}
}
