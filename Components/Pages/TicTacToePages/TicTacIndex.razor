@page "/TicTac/Index"

@inject JugadoresService jugadoresService
@inject PartidasService partidasService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Index</PageTitle>

<div class="container mx-auto max-w-lg p-6 bg-white rounded-lg shadow-xl text-center">
    <div class="game-container">
        <!-- PANTALLA DE SELECCIÓN DE JUGADOR -->
        <div class="selection-screen">
            <h1>Elige tu jugador</h1>
            <div class="row"> 
                <div class="col-9">
                    <label class="form-label"><strong>Jugador X:</strong></label>
                    <InputSelect class="form-control" @bind-Value="JugadorXId">
                        <option value="" selected disabled> Seleccione Jugador X </option>
                        @foreach (var jugador in ListaJugadores)
                        {
                            <option value="@jugador.JugadorId" disabled = "@(jugador.JugadorId == JugadorOId)">@jugador.Nombres</option>
                        }
                    </InputSelect>
                </div>
            </div>

            <div class="row mt-2">
                <div class="col-9">
                    <label class="form-label"><strong>Jugador O:</strong></label>
                    <InputSelect class="form-control" @bind-Value="JugadorOId">
                        <option value="" selected disabled> Seleccione Jugador O </option>
                        @foreach (var jugador in ListaJugadores)
                        {
                            <option value="@jugador.JugadorId" disabled="@(jugador.JugadorId == JugadorXId)">@jugador.Nombres</option>
                        }
                    </InputSelect>
                </div>
            </div>

            <button class="btn btn-success btn-lg mt-4"
            disabled= "@(!JugadorXId.HasValue || !JugadorOId.HasValue)"
            @onclick="StartGame">
                Iniciar Partida
            </button>
        </div>
    </div>
</div>
@code {
    private enum PlayerType { X, O }

    private int? JugadorXId { get; set; }
    private int? JugadorOId { get; set; }

    private PlayerType? playerTypeSelection;

    public List<Jugadores> ListaJugadores = new List<Jugadores>();

    protected override async Task OnInitializedAsync ()
    {
        ListaJugadores = await jugadoresService.Listar(j => true);
    }

    private void SelectPlayerType(PlayerType playerType)
    {
        playerTypeSelection = playerType;
        StateHasChanged();
    }

    private void SelectPlayerX()
    {
        playerTypeSelection = PlayerType.X;
    }

    private async void StartGame()
    {
        if (!JugadorXId.HasValue || !JugadorOId.HasValue)
        {
            return;
        }

        var nuevaPartida = new Partidas()
        {
            Jugador1Id = JugadorXId.Value,
            Jugador2Id = JugadorOId.Value,
            EstadoPartida = "En progeso",
            GanadorId = null,
            TurnoJugadorId = JugadorXId.Value,
            EstadoTablero = "---------",
            FechaInicio = DateTime.Now
        };

        if (await partidasService.Guardar(nuevaPartida))
        {
            navigationManager.NavigateTo($"/TicTac/Board/{nuevaPartida.PartidaId}");
        }
    }
}